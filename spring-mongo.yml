apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-app
  template:
    metadata:
      labels:
        app: spring-app
    spec:
      containers:
        - name: springappcontai
          image: doh1/doh-spring-boot-app:2
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_DB_HOSTNAME
              value: mongo-svc
            - name: MONGO_DB_PASSWORD
              value: doh1
            - name: MONGO_DB_USERNAME
              value: doh
---
apiVersion: v1
kind: Service
metadata:
  name: springsvc
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongostateful
spec:
  replicas: 3
  serviceName:
  selector:
    matchLabels:
      name: springstate
  template:
    metadata:
      labels:
        name: springstate
    spec:
      containers:
        - name: springcontainer
          image: mongo
          ports:
            - containerPort: 27017
          command:
            - "mongod"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
          resources:
            requests:
              cpu: "200m"
              memory: "126Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          volumeMounts:
            - name: mongovolclaim
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongovolclaim
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc
spec:
  clusterIP: None
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: springstate
